class Solution {
    public double epsilon = 0.000001;
    public boolean judgePoint24(int[] nums) {
        List<Double> list = new ArrayList<>();
        for (int n : nums) list.add((double) n);
        return dfs(list);
    }
    private boolean dfs(List<Double> list){
        if (list.size() == 1) return Math.abs(list.get(0) - 24) <= epsilon;
        for (int i = 0; i < list.size(); i++) {
            for (int j = 0; j < list.size(); j++) {
                if (i != j) {
                    List<Double> list1 = new ArrayList<>();
                    for (int m = 0; m < list.size(); m++) {
                        if (m != i && m != j) list1.add(list.get(m));
                    }
                    for (int k = 0; k < 4; k++) {
                        if (k == 0) list1.add(list.get(i) + list.get(j));
                        if (k == 1) list1.add(list.get(i) - list.get(j));
                        if (k == 2) list1.add(list.get(i)*list.get(j));
                        if (k == 3) {
                            if (list.get(j) != 0) list1.add(list.get(i)/list.get(j));
                            else continue;
                        }   
                        if (dfs(list1)) return true;
                        list1.remove(list1.size()-1);
                    }
                }
            }
        }
        return false;
    }
}
